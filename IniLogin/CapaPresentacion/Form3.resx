<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnModificarUsu.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        HpEmTf4DYgYXNXPugrMAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnEliminar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>